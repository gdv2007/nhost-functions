provider = { }

[auth]
version = "0.38.0"

[auth.elevatedPrivileges]
mode = "disabled"

[auth.method.anonymous]
enabled = false

[auth.method.emailPassword]
emailVerificationRequired = true
hibpEnabled = false
passwordMinLength = 8

[auth.method.emailPasswordless]
enabled = false

[auth.method.oauth.apple]
enabled = false

[auth.method.oauth.azuread]
enabled = false
tenant = "common"

[auth.method.oauth.bitbucket]
enabled = false

[auth.method.oauth.discord]
enabled = false

[auth.method.oauth.facebook]
enabled = false

[auth.method.oauth.github]
enabled = false

[auth.method.oauth.gitlab]
enabled = false

[auth.method.oauth.google]
enabled = false

[auth.method.oauth.linkedin]
enabled = false

[auth.method.oauth.spotify]
enabled = false

[auth.method.oauth.strava]
enabled = false

[auth.method.oauth.twitch]
enabled = false

[auth.method.oauth.twitter]
enabled = false

[auth.method.oauth.windowslive]
enabled = false

[auth.method.oauth.workos]
enabled = false

[auth.method.otp.email]
enabled = false

[auth.method.smsPasswordless]
enabled = false

[auth.method.webauthn]
enabled = false

[auth.method.webauthn.attestation]
timeout = 60_000

[auth.misc]
concealErrors = false

[auth.rateLimit.bruteForce]
interval = "5m"
limit = 10

[auth.rateLimit.emails]
interval = "1h"
limit = 10

[auth.rateLimit.global]
interval = "1m"
limit = 100

[auth.rateLimit.signups]
interval = "5m"
limit = 10

[auth.rateLimit.sms]
interval = "1h"
limit = 10

[auth.redirections]
allowedUrls = [ ]
clientUrl = "http://localhost:3000"

[auth.session.accessToken]
customClaims = [ ]
expiresIn = 3_600

[auth.session.refreshToken]
expiresIn = 2_592_000

[auth.signUp]
disableNewUsers = false
enabled = true

[auth.totp]
enabled = false

[auth.user.email]
allowed = [ ]
blocked = [ ]

[auth.user.emailDomains]
allowed = [ ]
blocked = [ ]

[auth.user.gravatar]
default = "blank"
enabled = true
rating = "g"

[auth.user.locale]
allowed = [ "en" ]
default = "en"

[auth.user.roles]
allowed = [ "user", "me" ]
default = "user"

[functions.node]
version = 22

[global]
environment = [ ]

[hasura]
adminSecret = "{{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}"
version = "v2.46.0-ce"
webhookSecret = "{{ secrets.NHOST_WEBHOOK_SECRET }}"

[hasura.events]
httpPoolSize = 100

[[hasura.jwtSecrets]]
key = "{{ secrets.HASURA_GRAPHQL_JWT_SECRET }}"
type = "HS256"

[hasura.logs]
level = "warn"

[hasura.settings]
corsDomain = [ "*" ]
devMode = true
enableAllowList = false
enableConsole = true
enableRemoteSchemaPermissions = false
enabledAPIs = [ "metadata", "graphql", "pgdump", "config" ]
inferFunctionPermissions = true
liveQueriesMultiplexedRefetchInterval = 1_000
stringifyNumericTypes = false

[observability.grafana]
adminPassword = "{{ secrets.GRAFANA_ADMIN_PASSWORD }}"
contacts = { }

[observability.grafana.alerting]
enabled = false

[postgres]
version = "14.15-20250311-1"

[postgres.resources.storage]
capacity = 1

[storage]
version = "0.7.1"
